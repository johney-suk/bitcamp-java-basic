package day03;
// 제어문 2 - 반복문
// 반복문이란 특정 코드(들)을 반복하는 제어문이다.
// 반복문에는 for 반복문과 while 반복문 두가지가 있다.
// for는 비교적 명확하게 획수 지정이 된다.
// 예시: 총 5번, 총 userNumber번
// while은 조건식이 true인 동안 계속 반복된다 라는 의미이기 때문에
// 획수가 명확하지 않다!

// for 반복문은 다음과 같은 형태를 지닌다.
// for(제어변수의 선언; 반복 조건식; 제어변수의 변화식) {
//	   반복할코드
// }

// 제어변수의 선언: 해당 for문에서 반복여부를 결정할 변수를 선언과 초기화해준다.
// 반복조건식: 해당 반복조건식이 true이면 코드를 실행한다. false가 나오면 for 반복문은 종료가 된다.
// 제어변수의 변화식: for 반복문에서 반복할 코드의 실행이 모두 끝나고 나면
//					제어변수의 현재값을 변화시켜서
//					반복조건식을 다시 체크할 때 다른 결과가 나올수도 있게 변화시키는 식이다.
//					주로 할당연산자가 사용된다.

public class Ex08ForLoop {
	public static void main(String[] args) {		
		for(int i = 1; i <= 3; i++) {
			System.out.println("for 문 반복");
			System.out.println("i의 현재값: "+i );	
		}
		/*
		 *  위의 for문은 다음과 같은 실행순서를 가지게 된다.
		 *  1. int i = 1;
		 *  2. i <= 3; -> i의 현재값이 1이므로 true
		 *  3. System.out.println() 2개 실행
		 *  4. i++ -> i의 현재값이 2가 된다.
		 *  5. i <= 3; -> i의 현재값이 2이므로 true
		 *  6. System.our.println() 2개 실행
		 *  7. i++ -> i의 현재값이 3이 된다.
		 *  8. i<= 3; -> i의 현재값이 3이므로 true
		 *  9. System.out.println() 2개 실행
		 *  10. i++ -> i의 현재값이 4가 된다.
		 *  11. i <= 3; -> i의 현재값이 4이므로 false -> for문 종
		 */
		
		// for 문에 대한 팀들
		// 1. 전통적으로 제어변수는 i -> j -> k -> l ... 순으로 들어간다.
		// 예시 :
		// for(int i = ....) {
		//		for(int j = ....) {
		//
		//	}
		// for(int i = ....) {
		//		for(int j = ....) {
		//
		//			}
		//		}
		//	}
		
		// 2. 제어변수도 하나의 변수처럼 취급되고 유효범위는 해당 for문의 코드블락 전체이다.
		
		// 3. 제어변수의 선언과 초기화는 밖으로 뺄수 있긴 하지만 왠만하면 해당 for문의
		//	 () 안에서 선언과 초기화하는게 정적인 표현이다.
		///	 만약 제어변수를 밖으로 빼게 되더라도 for문 () 안에는 반드시
		// 	 ; 이 2개가 나와야 한다.
		
		// 4. 변화식의 경우 주로 우리가 ++ 을 사용하지만 다른 할당 연산자를 통하거나
		//	 for문 내부에서 변화시켜도 되긴 한다.
		
		// 5. 제어변수의 초기화나 반복 조건식에 다른 변수가 들어갈 수도 있다!
		//	 예시 :for(int i = userNumber; i <= limit; i++);
		
		for(int i =5; i >= 0; i--) {
			System.out.println("i의 현재값: "+i);
		}
		
		// for 문을 만들때 주의할점
		// 1. i 와 1을 헷갈리지 맙시다.
//		for(int i = 1; 1 <= 3; i++) {
//			System.out.println("i의 현재값: "+i);
//		}
		
		// 2. for문의 ()가 끝나고 ; 을 붙이면 반복되지 않습니다.
		for(int i = 1; i <=3; i++);{
			System.out.println("반복될까요?");
		}
		// for문의 ()뒤에 ; 이 붙으면 그 뒤의 중괄호는 for문에 속한 코드 블락이 아니라
		// 그냥 별개의 다른 코드 블락이 되기 때문에, 실제로 반복되는 코드는 없다 라는 의미가 된다.
		
		// 3. 제어문의 경우, 만약 실행할 코드가 한줄만 있으면 중괄호를 생략해도 되긴 하지만
		//	 한줄만 실행하더라도 반드시 중괄호를 넣어주자
		for(int i = 1; i <= 3; i++) {
			System.out.println(i);
		}
	}

}
